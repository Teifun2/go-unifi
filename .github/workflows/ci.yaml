---
name: "Continuous Integration"
on:
  pull_request: {}
  push:
    branches:
      - 'main'
    tags:
      - 'v*'

permissions:
  contents: "read"

jobs:
  build:
    runs-on: 'ubuntu-latest'
    steps:
      - uses: 'actions/checkout@v4'
      - uses: 'actions/setup-go@v5'
      - run: 'go build ./...'

  test:
    name: "Test"
    needs: 'build'
    runs-on: 'ubuntu-latest'
    steps:
      - uses: 'actions/checkout@v4'
      - uses: 'actions/setup-go@v5'
      - name: "Run tests"
        run: "go test -cover -coverprofile=coverage.out -covermode atomic ./..."
      - name: "Archive code coverage results"
        uses: "actions/upload-artifact@v4"
        with:
          name: "code-coverage"
          path: "coverage.out"

  stringer:
    needs: 'build'
    runs-on: 'ubuntu-latest'
    steps:
      - uses: 'actions/checkout@v4'
      - uses: 'actions/setup-go@v5'

      - run: 'go generate unifi/device.go'
      - run: 'git diff --compact-summary --exit-code'

  lint:
    name: "Lint"
    runs-on: 'ubuntu-latest'
    steps:
      - uses: 'actions/checkout@v4'
      - uses: 'actions/setup-go@v5'
      - uses: 'golangci/golangci-lint-action@v6'

  yamllint:
    runs-on: 'ubuntu-latest'
    steps:
      - uses: 'actions/checkout@v4'
      - uses: 'ibiqlik/action-yamllint@v3'

  test-codegen:
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v4"
      - uses: "actions/setup-go@v5"
      - run: "go generate unifi/codegen.go"
